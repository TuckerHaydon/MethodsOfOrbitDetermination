function [barycentric_dynamical_time] = BarycentricDynamicalTimeFromTerrestrialTime(terrestrial_time)
    % Computes the barycentric dynamical time from terrestrial time.
    % 
    % Requires:
    % - terrestrial_time:
    %   - (1, 1) datetime.
    %   - The current terrestrial time.
    %  
    % Returns:
    % - barycentric_dynamical_time:
    %   - (1, 1) datetime.
    %   - The associated barycentric dynamical time.
    % 
    % References:
    % - Vallado, Fundamentals of Astrodynamics and Applications, 5th edition
    arguments(Input)
        terrestrial_time(1, 1) datetime
    end

    arguments(Output)
        barycentric_dynamical_time(1, 1) datetime
    end

    % No time zone
    assert(isempty(terrestrial_time.TimeZone));

    % Compute the number of julian centuries
    [JD_TT, ~] = JulianDate( ...
        terrestrial_time.Year, ...
        terrestrial_time.Month, ...
        terrestrial_time.Day, ...
        terrestrial_time.Hour, ...
        terrestrial_time.Minute, ...
        terrestrial_time.Second); 
    T_TT = JulianCenturiesSinceJ2000(JD_TT);

    % Vallado, 3-54
    TDB_correction_sec = ...
        0.001657 .* sin(628.3076  .* T_TT + 6.2401) + ...
        0.000022 .* sin(575.3385  .* T_TT + 4.2970) + ...
        0.000014 .* sin(1256.6152 .* T_TT + 6.1969) + ...
        0.000005 .* sin(606.9777  .* T_TT + 4.0212) + ...
        0.000005 .* sin(52.9691 .* T_TT + 0.4444) + ...
        0.000002 .* sin(21.3299 .* T_TT + 5.5431) + ...
        0.000010 .* T_TT .* sin(628.3076 .* T_TT + 4.2490);

    TDB_correction_sec2 = 0.001657*sin(628.3076*T_TT+6.2401) ...
               + 0.000022*sin(575.3385*T_TT+4.2970) ...
               + 0.000014*sin(1256.6152*T_TT+6.1969) ...
               + 0.000005*sin(606.9777*T_TT+4.0212) ...
               + 0.000005*sin(52.9691*T_TT+0.4444) ...
               + 0.000002*sin(21.3299*T_TT+5.5431) ...
               + 0.000010*T_TT*sin(628.3076*T_TT+4.2490);

    barycentric_dynamical_time = terrestrial_time + seconds(TDB_correction_sec);
end