classdef SimpleTwoBodyOffsetGravitationalAccelerationJacobianGCRFTests < matlab.unittest.TestCase
    methods (Test)
        function TestAgainstSymbollic(testCase)   

            r_sat  = sym("r_sat", [3, 1], ["real"]);
            r_moon = sym("r_moon", [3, 1], ["real"]);
            mu     = sym("mu", [1, 1], ["real"]);

            r_ddot = -mu * (r_sat - r_moon) / norm(r_sat - r_moon)^3;

            position_jacobian = jacobian(r_ddot, r_sat);
            position_jacobian_fun = matlabFunction(position_jacobian, "Vars", {r_sat, r_moon, mu});
          
            mu_  = 4902.800066 .* Units.kilometers.^3 ./ Units.seconds.^2;
            r_sat_ = [1e5; 1e6; 2e4];
            r_moon_ = [2e2; 1e1; -3e2];

            position_jacobian_ = SimpleTwoBodyOffsetGravitationalAccelerationJacobianGCRF((r_sat_ - r_moon_), mu_);
            expected_position_jacobian_ = position_jacobian_fun(r_sat_, r_moon_, mu_);
            
            testCase.verifyEqual( ...
                position_jacobian_, ...
                expected_position_jacobian_, ...
                'RelTol', 1e-9);  
        end

        function TestSingleVectorWithFiniteDifference(testCase)   
                
            moon_gravitational_parameter  = ...
                4902.800066 .* Units.kilometers.^3 ./ Units.seconds.^2;

            offset_gcrf = transpose([
                6e3, 1e3, 1e2;
            ]);

            dx = 1; % meters
            perturbed_offset_gcrf = [
                offset_gcrf + [dx; 0; 0], ...
                offset_gcrf - [dx; 0; 0], ...
                offset_gcrf + [0; dx; 0], ...
                offset_gcrf - [0; dx; 0], ...
                offset_gcrf + [0; 0; dx], ...
                offset_gcrf - [0; 0; dx]
            ];

            [perturbed_gravitational_acceleration_gcrf] = ...
                SimpleTwoBodyOffsetGravitationalAccelerationGCRF(...
                    perturbed_offset_gcrf, ...
                    moon_gravitational_parameter);

            expected_position_jacobian_gcrf = [
                (perturbed_gravitational_acceleration_gcrf(:, 1) - perturbed_gravitational_acceleration_gcrf(:, 2)) ./ (2 * dx);
                (perturbed_gravitational_acceleration_gcrf(:, 3) - perturbed_gravitational_acceleration_gcrf(:, 4)) ./ (2 * dx);
                (perturbed_gravitational_acceleration_gcrf(:, 5) - perturbed_gravitational_acceleration_gcrf(:, 6)) ./ (2 * dx);
            ];
            expected_position_jacobian_gcrf = reshape(expected_position_jacobian_gcrf, 3, 3, []);

            [position_jacobian_gcrf] = ...
                SimpleTwoBodyOffsetGravitationalAccelerationJacobianGCRF(...
                    offset_gcrf, ...
                    moon_gravitational_parameter);

            testCase.verifyEqual( ...
                position_jacobian_gcrf, ...
                expected_position_jacobian_gcrf, ...
                'RelTol', 1e-6);  
        end

        function TestMultipleVectorsWithFiniteDifference(testCase)   
                
             moon_gravitational_parameter  = ...
                4902.800066 .* Units.kilometers.^3 ./ Units.seconds.^2;

            offset_gcrf = transpose([
                6e3, 1e3, 1e2;
                5e2, 6e3, 2e3;
            ]);

            dx = 1; % meters
            perturbed_offset_gcrf = [
                offset_gcrf + [dx; 0; 0], ...
                offset_gcrf - [dx; 0; 0], ...
                offset_gcrf + [0; dx; 0], ...
                offset_gcrf - [0; dx; 0], ...
                offset_gcrf + [0; 0; dx], ...
                offset_gcrf - [0; 0; dx]
            ];

            [perturbed_gravitational_acceleration_gcrf] = ...
                SimpleTwoBodyOffsetGravitationalAccelerationGCRF(...
                    perturbed_offset_gcrf, ...
                    moon_gravitational_parameter);

            expected_position_jacobian_gcrf(:, :, 1) = [
                (perturbed_gravitational_acceleration_gcrf(:, 1) - perturbed_gravitational_acceleration_gcrf(:, 3)) ./ (2 * dx), ...
                (perturbed_gravitational_acceleration_gcrf(:, 5) - perturbed_gravitational_acceleration_gcrf(:, 7)) ./ (2 * dx), ...
                (perturbed_gravitational_acceleration_gcrf(:, 9) - perturbed_gravitational_acceleration_gcrf(:, 11)) ./ (2 * dx);
            ];

            expected_position_jacobian_gcrf(:, :, 2) = [
                (perturbed_gravitational_acceleration_gcrf(:, 2) - perturbed_gravitational_acceleration_gcrf(:, 4)) ./ (2 * dx), ...
                (perturbed_gravitational_acceleration_gcrf(:, 6) - perturbed_gravitational_acceleration_gcrf(:, 8)) ./ (2 * dx), ...
                (perturbed_gravitational_acceleration_gcrf(:, 10) - perturbed_gravitational_acceleration_gcrf(:, 12)) ./ (2 * dx);
            ];


            [position_jacobian_gcrf] = ...
                SimpleTwoBodyOffsetGravitationalAccelerationJacobianGCRF(...
                    offset_gcrf, ...
                    moon_gravitational_parameter);

            testCase.verifyEqual( ...
                position_jacobian_gcrf, ...
                expected_position_jacobian_gcrf, ...
                'RelTol', 1e-6);  
        end
    end
end